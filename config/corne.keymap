/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            label = "Base";
            bindings = <
&kp TAB           &kp Q  &kp W  &kp E         &kp R  &kp T        &kp Y    &kp U  &kp I              &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D         &kp F  &kp G        &kp H    &kp J  &kp K              &kp L    &kp SEMI  &kp APOS
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C         &kp V  &kp B        &kp N    &kp M  &kp COMMA          &kp DOT  &kp FSLH  &kp ESC
                                &kp LEFT_WIN  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RIGHT_COMMAND
            >;
        };

        Lower {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Lower";
            bindings = <
&kp DELETE    &trans    &kp UP    &trans     &trans     &trans       &kp N7   &kp N8     &kp N9    &kp N0   &bt BT_CLR  &out OUT_TOG
&trans        &kp LEFT  &kp DOWN  &kp RIGHT  &trans     &trans       &kp N4   &kp N5     &kp N6    &trans   &bt BT_PRV  &bt BT_NXT
&kp LEFT_ALT  &trans    &trans    &trans     &kp MINUS  &kp PLUS     &kp N1   &kp N2     &kp N3    &kp DOT  &trans      &none
                                  &kp LGUI   &trans     &kp SPACE    &kp RET  &kp RCTRL  &kp RALT
            >;
        };

        Raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            label = "Raise";
            bindings = <
&trans  &kp EXCL  &kp AT  &kp HASH  &kp DLLR      &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_ASTERISK  &kp LPAR  &kp RPAR  &kp DEL
&to 3   &kp F1    &kp F2  &kp F3    &kp F4        &kp F5       &kp UNDER  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&to 4   &kp F6    &kp F7  &kp F8    &kp F9        &kp F10      &kp MINUS  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                          &kp LGUI  &kp LEFT_ALT  &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        Figma {
            label = "Figma";
            bindings = <
&kp ESC           &kp LC(G)  &kp LC(LS(G))  &kp LC(LA(G))  &kp R    &kp T        &kp LC(BACKSLASH)  &kp LS(R)      &kp LC(O)             &kp LS(G)              &kp LA(LC(BACKSLASH))  &kp DEL
&kp LSHFT         &kp A      &kp S          &kp LC(D)      &kp F    &kp G        &kp LC(L)          &kp LC(LS(E))  &kp LC(LA(K))         &kp LA(LC(B))          &kp LC(LS(M))          &kp P
&kp LEFT_CONTROL  &kp LC(Z)  &kp LC(X)      &kp C          &kp V    &trans       &kp LC(LS(H))      &kp LC(LS(L))  &kp LC(LEFT_BRACKET)  &kp LC(RIGHT_BRACKET)  &kp LC(LA(T))          &to 0
                                            &kp LEFT_ALT   &kp TAB  &kp SPACE    &kp ENTER          &kp LA(LS(A))  &kp LC(SLASH)
            >;
        };

        Blender {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &to 0
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
